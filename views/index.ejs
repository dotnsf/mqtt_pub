<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8"/>
<meta name="viewport" content="width=device-width,initial-scale=1" />
<meta name="apple-mobile-web-app-capable" content="yes" />
<title>MQTT</title>
<script src="//code.jquery.com/jquery-2.2.4.min.js"></script>
<link rel="stylesheet" href="//code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.css" />
<script src="//code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.js"></script>

<script src="./mqttws31.js"></script>

<script type="text/javascript">
var client;
var sendInterval = 0;
var phoneData = {};
phoneData.d = {};

var lat = null;
var lng = null;
var ac = null;
var acg = null;
var rot = null;
var ori = null;
$(function(){
  if( window.DeviceMotionEvent ){
    window.addEventListener( "devicemotion", deviceMotion );
  }
  if( window.DeviceOrientationEvent ){
    window.addEventListener( "deviceorientation", deviceOrientation );
  }
});

function connect(){
  var hostname = $('#mqtt_hostname').val();
  var port = parseInt( $('#mqtt_port').val() );
  var clientID = $('#mqtt_clientID').val();
  var sendInterval = parseInt( $('#mqtt_sendInterval').val() );
  //console.log( "clientID=" + clientID );
  client = new Messaging.Client( hostname, port, clientID );
  client.onConnectionLost = onConnectionLost;
  client.connect( { onSuccess: onConnect, onFailure: onConnectFailure, useSSL: true } );

  setInterval( publishMessage, sendInterval );
}

function deviceMotion( e ) {
  e.preventDefault();

  ac = e.acceleration;
  acg = e.accelerationIncludingGravity;
  rot = e.rotationRate;

  //publishMessage();
}

function deviceOrientation( e ) {
  var tiltLR = e.gamma;
  var tiltFB = e.beta;
  var dir = e.alpha;
  ori = {};
  ori['tiltLR'] = tiltLR;
  ori['tiltFB'] = tiltFB;
  ori['dir'] = dir;

  //publishMessage();
}

function publishMessage(){
  console.log( 'publishMessage()' );
  if( phoneData != null ){
    var d = {};
    if( lat != null ){
      d['lat'] = lat;
      $('#lat').html( lat );
    }
    if( lng != null ){
      d['lng'] = lng;
      $('#lng').html( lng );
    }
    if( ac != null ){
      d['ac'] = ac;
      $('#ac_x').html( ac['x'] );
      $('#ac_y').html( ac['y'] );
      $('#ac_z').html( ac['z'] );
    }
    if( acg != null ){
      d['acg'] = acg;
      $('#acg_x').html( acg['x'] );
      $('#acg_y').html( acg['y'] );
      $('#acg_z').html( acg['z'] );
    }
    if( rot != null ){
      d['rot'] = rot;
      $('#rot_a').html( rot['alpha'] );
      $('#rot_b').html( rot['beta'] );
      $('#rot_g').html( rot['gamma'] );
    }
    if( ori != null ){
      d['ori'] = ori;
      $('#ori_lr').html( ori['tiltLR'] );
      $('#ori_fb').html( ori['tiltFB'] );
      $('#ori_dir').html( ori['dir'] );
    }

    if( d ){
      phoneData.d = d;
      phoneData.publish();
    }
  }
}


function onConnect() {
  console.log("Connected");
}

function onConnectFailure(error) {
  console.log("Connect Failed");
  console.log(error.errorCode);
  console.log(error.errorMessage);
}

function onConnectionLost(response) {
  console.log("onConnectionLost")
  if (response.errorCode !== 0) {
    console.log("onConnectionLost:"+response.errorMessage);
  }
  clearInterval(msgInterval);
  client.connect({onSuccess: onConnect, onFailure: onConnectFailure});
}


phoneData.publish = function(){
  console.log( 'publish()' );
  if( client ){
    var message = new Messaging.Message( JSON.stringify( phoneData.d ) );
    message.destinationName = $('#mqtt_topic').val();
    client.send( message );
    console.log( 'client.send()' );
  }
}
</script>

</head>
<body>

<div id="page0" data-role="page">
 <div data-role="header" data-position="fixed">
  <h1>MQTT</h1>
 </div>

 <div data-role="content">
  <table border="1" cellspacing="0" data-theme="c" width="100%">
   <thead>
    <tr><th width="50%">Keys</th><th>Values</th></tr>
   </thead>
   <tbody>
    <tr><td>hostname</td><td><input type="text" id="mqtt_hostname" value="<%= settings.hostname %>"></td></tr>
    <tr><td>port</td><td><input type="text" id="mqtt_port" value="<%= settings.port %>"></td></tr>
    <tr><td>client id</td><td><input type="text" id="mqtt_clientID" value="<%= settings.clientID %>"></td></tr>
    <tr><td>topic</td><td><input type="text" id="mqtt_topic" value="<%= settings.topic %>"></td></tr>
    <tr><td>send interval</td><td><input type="text" id="mqtt_sendInterval" value="<%= settings.sendInterval %>"></td></tr>
   </tbody>
  </table>
  <a href="#page1" class="ui-btn" onClick="connect();">Connect</a>
 </div>
</div>

<div id="page1" data-role="page">
 <div data-role="header" data-position="fixed">
  <a class="btn" href="#page0">Back</a>
  <h1>MQTT</h1>
 </div>

 <div data-role="content">
  <table border="1" cellspacing="0" data-theme="c" width="100%">
   <thead>
    <tr><th width="50%">Keys</th><th>Values</th></tr>
   </thead>
   <tbody>
    <tr><td>Lat</td><td id="lat">&nbsp;</td></tr>
    <tr><td>Lng</td><td id="lng">&nbsp;</td></tr>
    <tr><td>Acceleration.X</td><td id="ac_x">&nbsp;</td></tr>
    <tr><td>Acceleration.Y</td><td id="ac_y">&nbsp;</td></tr>
    <tr><td>Acceleration.Z</td><td id="ac_z">&nbsp;</td></tr>
    <tr><td>Acceleration(Gravity).X</td><td id="acg_x">&nbsp;</td></tr>
    <tr><td>Acceleration(Gravity).Y</td><td id="acg_y">&nbsp;</td></tr>
    <tr><td>Acceleration(Gravity).Z</td><td id="acg_z">&nbsp;</td></tr>
    <tr><td>Rotate.A</td><td id="rot_a">&nbsp;</td></tr>
    <tr><td>Rotate.B</td><td id="rot_b">&nbsp;</td></tr>
    <tr><td>Rotate.G</td><td id="rot_g">&nbsp;</td></tr>
    <tr><td>Orientation.LR</td><td id="ori_lr">&nbsp;</td></tr>
    <tr><td>Orientation.FB</td><td id="ori_fb">&nbsp;</td></tr>
    <tr><td>Orientation.DIR</td><td id="ori_dir">&nbsp;</td></tr>
   </tbody>
  </table>
 </div>
</div>

</body>
</html>
